{"version":3,"sources":["logo.svg","NavBar/NavBarHome.js","NavBar/NavBarBrand.js","NavBar/NavBarProfile.js","NavBar/NavBarWatchList.js","NavBar/NavBarSignIn.js","NavBar/NavBarSearch.js","NavBar/NavBar.js","Charts/UnitedStatesCases.js","Charts/IndiaCases.js","Home/Home.js","Footer/SocialButtons.js","Footer/Footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","NavBarHome","className","href","NavBarBrand","NavBarProfile","NavBarWatchList","NavBarSignIn","NavBarSearch","type","placeholder","aria-label","NavBar","id","justify-content-center","UnitedStatesCases","props","state","error","isLoaded","items","fetch","then","res","json","result","setState","console","log","this","getUS_Timeline","data","objectArray","day","key","Date","obj","new_daily_deaths","new_daily_cases","dates","push","pop","arrangeForGraph","width","height","stroke","strokeDasharray","dataKey","Component","IndiaCases","getIndiaData","Home","showIndia","handleClickIndia","bind","handleClickUS","class","onClick","React","SocialButtons","Footer","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.d280759d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react'\n\nfunction NavBarHome() {\n\n    return (\n        <div>\n            <li className=\"nav-item active\">\n                <a className=\"nav-link\" href=\"#\">Home <span className=\"sr-only\">(current)</span></a>\n            </li>\n        </div>\n    )\n}\n\nexport default NavBarHome","import React from 'react'\n\nfunction NavBarBrand() {\n\n    return (\n        <div className=\"NavBarBrand\">\n                \n        </div>\n        \n    )\n}\n\nexport default NavBarBrand","import React from 'react'\n\nfunction NavBarProfile() {\n\n    return (\n        <div>\n            <li className=\"nav-item\">\n                <a className=\"nav-link disabled\" href=\"#\">Profile</a>\n            </li>      \n        </div>\n    )\n}\n\nexport default NavBarProfile","import React from 'react'\n\nfunction NavBarWatchList() {\n\n    return (\n        <div>\n            <li className=\"nav-item\">\n                <a className=\"nav-link disabled\" href=\"#\">Watch List</a>\n            </li>      \n        </div>\n    )\n}\n\nexport default NavBarWatchList","import React from 'react'\n\nfunction NavBarSignIn() {\n\n    return (\n        <div>\n            {/* <button type=\"button\" class=\"btn btn-dark\">Sign In</button> */}\n            <a className=\"nav-link\" className=\"btn btn-light\" href=\"#\">Sign In <span className=\"sr-only\">(current)</span></a>\n        </div>\n    )\n}\n\nexport default NavBarSignIn;","import React from 'react'\n\nfunction NavBarSearch() {\n\n    return (\n        <div className = 'NavBarSearch'>\n            <form className=\"form-inline my-2 my-lg-0\">\n                <input className=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"></input>\n                <button className=\"btn btn-outline-info my-2 my-sm-0\" type=\"submit\">Search</button>\n            </form>   \n\n        </div>\n    )\n}\n\nexport default NavBarSearch;","import React from 'react';\nimport NavBarHome from './NavBarHome';\nimport NavBarBrand from './NavBarBrand';\nimport NavBarProfile from './NavBarProfile';\nimport NavBarWatchList from './NavBarWatchList';\nimport NavBarSignIn from './NavBarSignIn';\nimport NavBarSearch from './NavBarSearch';\n\n\nfunction NavBar() {\n    return (\n        <div className='container-fullwidth'>\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n                <NavBarBrand />\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                    <ul className=\"navbar-nav mr-auto\" justify-content-center=\"true\">\n                        <NavBarHome />\n                        <NavBarProfile />\n                        <NavBarWatchList />\n                    </ul>\n                    \n                    <NavBarSearch />\n                    <NavBarSignIn />\n                </div>\n            </nav>\n        </div>\n    )\n}\n\nexport default NavBar;","import React, { Component } from 'react';\nimport {\n  LineChart,\n  CartesianGrid,\n  XAxis,\n  YAxis,\n  Tooltip,\n  Legend,\n  Line,\n  ComposedChart,\n  Area,\n  Bar\n} from \"recharts\";\n\n\n\n\nclass UnitedStatesCases extends Component {\n\n    constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      items: []\n    };\n  }\n\n  getUS_Timeline() {\n    fetch('https://cors-anywhere.herokuapp.com/https://thevirustracker.com/free-api?countryTimeline=US')\n      .then(res => res.json())\n      .then(\n        (result) => {\n          // console.log(result);\n          this.setState({\n            isLoaded: true,\n            items: result\n          });\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        (error) => {\n          console.log('Could not access data');\n          this.setState({\n            isLoaded: true,\n            error\n          });\n        }\n      )\n  }\n\n  componentDidMount() {\n    this.getUS_Timeline();\n  }\n\n  arrangeForGraph() {\n    var data = this.state.items;\n    var objectArray = [];\n    var day = 1;\n    \n    for(var key in data['timelineitems'][0]) {\n      var date = new Date(key);\n\n      var obj = {\n              new_daily_deaths:data['timelineitems'][0][key]['new_daily_deaths'],\n              new_daily_cases:data['timelineitems'][0][key]['new_daily_cases'],\n              dates:key,\n              day: day\n            }\n      objectArray.push(obj);\n      day += 1;\n    } \n\n    objectArray.pop();\n    \n    return objectArray;\n\n  }\n\n\n  render() {\n    const { error, isLoaded, items } = this.state;\n    if(isLoaded) {\n      var data = this.arrangeForGraph(items);\n      console.log(data);   \n\n\n      return (\n              <div>\n                <h4>United States Cases</h4>\n                <div className = \"chart\">\n                    <LineChart width={1000} height={300} data={data}>\n                    <CartesianGrid stroke=\"#efe\" strokeDasharray=\"1 1\"/>\n                      <XAxis dataKey=\"dates\"/>\n                      <YAxis/>\n                      <Tooltip />\n                      <Legend />\n                      <Line type=\"monotone\" dataKey=\"new_daily_cases\" stroke=\"#8884d8\" />\n                      <Line type=\"monotone\" dataKey=\"new_daily_deaths\" stroke=\"#82ca9d\" />\n                    </LineChart>\n                  </div>\n              </div>\n\n          );\n    }\n\n    return (\n        <p>Loading graph...</p>\n      )\n  }\n\n}\n\nexport default UnitedStatesCases;","import React, { Component } from 'react';\nimport {\n  LineChart,\n  CartesianGrid,\n  XAxis,\n  YAxis,\n  Tooltip,\n  Legend,\n  Line,\n  ComposedChart,\n  Area,\n  Bar\n} from \"recharts\";\n\n\n\n\nclass IndiaCases extends Component {\n\n    constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      items: []\n    };\n  }\n\n  getIndiaData() {\n    fetch('https://api.covid19india.org/data.json')\n      .then(res => res.json())\n      .then(\n        (result) => {\n          console.log(result);\n          this.setState({\n            isLoaded: true,\n            items: result\n          });\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        (error) => {\n          console.log('Could not access data');\n          this.setState({\n            isLoaded: true,\n            error\n          });\n        }\n      )\n  }\n\n  componentDidMount() {\n    this.getIndiaData();\n  }\n\n  arrangeForGraph() {\n    var data = this.state.items;\n    var objectArray = [];\n    var day = 1;\n    \n    for(var key in data['cases_time_series']) {\n\n      var obj = {\n              new_daily_deaths:data['cases_time_series'][key]['dailydeceased'],\n              new_daily_cases:data['cases_time_series'][key]['dailyconfirmed'],\n              dates:data['cases_time_series'][key]['date'],\n              day: day\n            }\n      objectArray.push(obj);\n      day += 1;\n    } \n\n    objectArray.pop();\n    \n    return objectArray;\n\n  }\n\n\n  render() {\n    const { error, isLoaded, items } = this.state;\n    if(isLoaded) {\n      var data = this.arrangeForGraph(items);\n      console.log(data);   \n\n      return (\n              <div>\n                <h4>India Cases</h4>\n                <div className = \"chart\">\n                    <LineChart width={1000} height={300} data={data}>\n                    <CartesianGrid stroke=\"#efe\" strokeDasharray=\"1 1\"/>\n                      <XAxis dataKey=\"dates\"/>\n                      <YAxis/>\n                      <Tooltip />\n                      <Legend />\n                      <Line type=\"monotone\" dataKey=\"new_daily_cases\" stroke=\"#8884d8\" />\n                      <Line type=\"monotone\" dataKey=\"new_daily_deaths\" stroke=\"#82ca9d\" />\n                    </LineChart>\n                  </div>\n              </div>\n\n          );\n    }\n\n    return (\n        <p>Loading graph...</p>\n      )\n  }\n\n}\n\nexport default IndiaCases;","import React from 'react'\nimport USChart from '../Charts/UnitedStatesCases'\nimport IndiaChart from '../Charts/IndiaCases'\n\nclass Home extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n          showIndia: false\n        };\n  \n      // This binding is necessary to make `this` work in the callback\n      this.handleClickIndia = this.handleClickIndia.bind(this);\n      this.handleClickUS = this.handleClickUS.bind(this);\n    }\n  \n    handleClickIndia() {\n      this.setState(state => ({\n        showIndia: true\n      }));\n    }\n\n    handleClickUS() {\n        this.setState(state => ({\n          showIndia: false\n        }));\n      }\n  \n    render() {\n        if(!this.state.showIndia)\n        {\n            return (\n                <div>\n                    <USChart />\n                    <div className=\"btn-group mr-2\">\n                        <button type=\"button\" class=\"btn btn-outline-primary btn-group\">\n                        United States\n                        </button>\n                    </div>\n                    <div className=\"btn-group\">\n                        <button type=\"button\" class=\"btn btn-outline-primary btn-group\" onClick={this.handleClickIndia}>\n                        India\n                        </button>\n                    </div>\n                </div>\n            );\n        }\n\n        return (\n                <div>\n                    <IndiaChart />\n                        <div className=\"btn-group mr-2\">\n                            <button type=\"button\" class=\"btn btn-outline-primary btn-group\" onClick={this.handleClickUS}>\n                            United States\n                            </button>\n                        </div>\n                        <div className=\"btn-group\">\n                            <button type=\"button\" class=\"btn btn-outline-primary btn-group\">\n                            India\n                            </button>\n                        </div>\n                </div>\n        )\n    }\n  }\n\nexport default Home;","import React from 'react'\n\nfunction SocialButtons() {\n\n    return (\n      <div className=\"container\">\n          <ul className=\"list-unstyled list-inline text-center\">\n            <li className=\"list-inline-item\">\n              <a className=\"btn-floating btn-fb mx-1\">\n                <i className=\"fab fa-facebook-f\"> </i>\n              </a>\n            </li>\n            <li className=\"list-inline-item\">\n              <a className=\"btn-floating btn-tw mx-1\">\n                <i className=\"fab fa-twitter\"> </i>\n              </a>\n            </li>\n            <li className=\"list-inline-item\">\n              <a className=\"btn-floating btn-gplus mx-1\">\n                <i className=\"fab fa-google-plus-g\"> </i>\n              </a>\n            </li>\n            <li className=\"list-inline-item\">\n              <a className=\"btn-floating btn-li mx-1\">\n                <i className=\"fab fa-linkedin-in\"> </i>\n              </a>\n            </li>\n            <li className=\"list-inline-item\">\n              <a className=\"btn-floating btn-dribbble mx-1\">\n                <i className=\"fab fa-dribbble\"> </i>\n              </a>\n            </li>\n          </ul>\n          \n        </div>\n    )\n}\n\nexport default SocialButtons;","import React from 'react'\nimport SocialButtons from './SocialButtons.js'\n\nfunction Footer() {\n    return (\n        <footer className=\"page-footer font-small special-color-light pt-4 fixed-bottom\">\n          \n        <SocialButtons />\n        \n          <div className=\"footer-copyright text-center py-3\">\n              © 2020 Copyright: Vimanyu Awal\n          </div>\n        \n        </footer>\n    )\n}\n\nexport default Footer;","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport NavBar from './NavBar/NavBar'\nimport Home from \"./Home/Home\"\nimport Footer from './Footer/Footer'\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <NavBar />\n      <Home />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App />, document.getElementById(\"root\"))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}